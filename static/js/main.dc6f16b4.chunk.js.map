{"version":3,"sources":["Home/containers/index.jsx","Content/containers/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","style","textAlign","Button","variant","size","color","href","PureComponent","Content","styles","img1","img2","img3","img4","Component","backgroundImage","App","id","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VAkBeA,G,uLAZT,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,+CACA,uBAAGC,MAAO,CAACC,UAAW,WAAtB,qEACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,QAAQC,MAAM,YAAYC,KAAK,YAAhE,qB,GAPOC,kBCEEC,G,uLAGb,OACI,yBAAKT,UAAU,OAEX,yBAAKA,UAAU,WAAWC,MAAOS,EAAOC,MACpC,yBAAKX,UAAU,QAAf,WAKJ,yBAAKA,UAAU,QAAf,yRAMA,yBAAKA,UAAU,WAAWC,MAAOS,EAAOE,MACpC,yBAAKZ,UAAU,QAAf,gBAKJ,yBAAKA,UAAU,QAAf,8QAMA,yBAAKA,UAAU,WAAWC,MAAOS,EAAOG,MACpC,yBAAKb,UAAU,QAAf,cAKJ,yBAAKA,UAAU,QAAf,+bAOA,yBAAKA,UAAU,WAAWC,MAAOS,EAAOI,MACpC,yBAAKd,UAAU,QAAf,WAKJ,yBAAKA,UAAU,QAAf,8G,GAjDqBe,cAsE/BL,EAAS,CACXC,KAAM,CACFK,gBAAiB,+IAErBJ,KAAM,CACFI,gBAAiB,+IAErBH,KAAM,CACFG,gBAAiB,+IAErBF,KAAM,CACFE,gBAAiB,gJCpEVC,E,iLAXX,OACE,kBAAC,IAAD,KACI,yBAAKC,GAAG,UACN,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWtB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,WAAWE,UAAWZ,U,GAN5BM,aCMEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dc6f16b4.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Button from '@material-ui/core/Button';\nimport './index.css'\n\nclass Home extends PureComponent{\n  render(){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>Happy New Year!</h1>\n            <p style={{textAlign: 'center'}}>New year, new you! Let's help you keep track of your resolutions!</p>\n            <Button variant=\"contained\" size=\"large\" color=\"secondary\" href=\"/content\">Get Started</Button>\n          </header>\n        </div>\n      );\n      }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './index.css'\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\n\nexport default class Content extends Component{\n\n    render(){\n        return (\n            <div className=\"App\">\n\n                <div className=\"parallax\" style={styles.img1}>\n                    <div className=\"text\">\n                        HEALTH\n                    </div>\n                </div>\n\n                <div className=\"info\">\n                A New Year's resolution is a tradition, most common in the Western Hemisphere but also found in the Eastern Hemisphere, \n                in which a person resolves to continue good practices, change an undesired trait or behavior, to accomplish a personal \n                goal, or otherwise improve their life.\n                </div>\n\n                <div className=\"parallax\" style={styles.img2}>\n                    <div className=\"text\">\n                        WEIGHT LOSS\n                    </div>\n                </div>\n\n                <div className=\"info\">\n                In a 2014 report, 35% of participants who failed their New Year's Resolutions admitted they had unrealistic goals, 33% \n                of participants didn't keep track of their progress, and 23% forgot about them; about one in 10 respondents claimed \n                they made too many resolutions.\n                </div>\n\n                <div className=\"parallax\" style={styles.img3}>\n                    <div className=\"text\">\n                        RECYCLING\n                    </div>\n                </div>\n\n                <div className=\"info\">\n                A 2007 study by Richard Wiseman from the University of Bristol involving 3,000 people showed that 88% of those who set \n                New Year revolutions fail, despite the fact that 52% of the study's participants were confident of success at the \n                beginning. Men achieved their goal 22% more often when they engaged in goal setting, wherein resolutions are made in \n                terms of small and measurable goals (e.g., \"lost a pound a week\" rather than \"lose weight\").\n                </div>\n\n                <div className=\"parallax\" style={styles.img4}>\n                    <div className=\"text\">\n                        HIKING\n                    </div>\n                </div>\n\n                <div className=\"info\">\n                    Some popular resolutions are: Weight loss, eating healthy, getting a new job, and reading more books.\n                    {/* <FormGroup>\n                        <FormControlLabel control={<Checkbox value=\"checkedA\" />} label=\"Weight Loss\" />\n                        <FormControlLabel control={<Checkbox value=\"checkedB\" />} label=\"Healthy eating\" />\n                        <FormControlLabel control={<Checkbox value=\"checkedC\" />} label=\"New job\" />\n                        <FormControlLabel control={<Checkbox value=\"checkedD\" />} label=\"Read more books\" />\n                    </FormGroup> */}\n                    {/* <ul>\n                        <li>Weight Loss</li>\n                        <li>Healthy eating</li>\n                        <li>New job</li>\n                        <li>Read more books</li>\n                    </ul> */}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    img1: {\n        backgroundImage: 'url(https://images.unsplash.com/photo-1490645935967-10de6ba17061?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1335&q=80)',\n    },\n    img2: {\n        backgroundImage: 'url(https://images.unsplash.com/photo-1522844990619-4951c40f7eda?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80)'\n    },\n    img3: {\n        backgroundImage: 'url(https://images.unsplash.com/photo-1542601906990-b4d3fb778b09?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1474&q=80)'\n    },\n    img4: {\n        backgroundImage: 'url(https://images.unsplash.com/photo-1440186347098-386b7459ad6b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80)'\n    },\n};","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Home/containers';\nimport Content from './Content/containers';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n          <div id=\"Routes\">\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/content\" component={Content} />\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}